{"version":3,"sources":["types/filterTypes.ts","static/theme.ts","utils/store.ts","components/HelperComponents/CustomSelectComponents.tsx","components/Filter/Sort.tsx","components/Filter/StatusFilter.tsx","utils/axiosInstance.ts","utils/paramParser.ts","utils/queryKeys.ts","hooks/useUsers.ts","components/Filter/OwnerFilter.tsx","hooks/useTags.ts","components/Filter/Filter.tsx","components/Filter/TagFilter.tsx","static/styles.ts","utils/queryClient.ts","components/HelperComponents/NoProjects.tsx","components/Project/form/form-subs/generic/FormFields.tsx","components/Project/form/form-subs/generic/CustomMultiSelect.tsx","components/HelperComponents/Loading.tsx","components/Project/form/form-subs/CollaboratorField.tsx","components/Project/form/form-subs/generic/CustomCreatableMultiSelect.tsx","components/Project/form/form-subs/TagField.tsx","components/Project/form/form-subs/ProjectForm.tsx","components/Project/form/ProjectFormEdit.tsx","components/Project/form/EditFormModal.tsx","components/Project/DeleteConfirmationModal.tsx","components/Project/ProjectOwnerImage.tsx","components/Project/StaticProject.tsx","utils/formatUrl.ts","components/Project/ProjectList.tsx","hooks/useProjects.ts","static/images/rc-logo.png","components/App/Auth.tsx","components/Project/form/ProjectFormAdd.tsx","components/Project/form/AddFormModal.tsx","components/App/Nav.tsx","components/App/Home.tsx","components/App/Footer.tsx","components/HelperComponents/NotFound.tsx","components/App/App.tsx","index.tsx"],"names":["SortMethods","theme","createTheme","palette","primary","main","green","secondary","purple","useStore","create","set","sortFilter","tagFilter","undefined","ownerFilter","addForm","setSortFilter","sort","setTagFilter","tags","setOwnerFilter","rcId","Option","props","style","display","alignItems","Avatar","alt","label","src","value","image_path","variant","width","height","marginLeft","marginRight","Typography","children","Menu","SingleValue","Placeholder","selectProps","placeholder","SortControl","Control","alignSelf","cursor","UserControl","Hidden","xsDown","TagControl","UserSingleValue","margin","padding","borderRadius","backgroundColor","data","first_name","UserMultiValueLabel","MultiValueLabel","TagMultiValueLabel","multiStyles","multiValue","styles","multiValueRemove","borderBottomRightRadius","borderTopRightRadius","Sort","state","options","Grid","item","xs","sm","md","components","filter","includes","onChange","e","StatusFilter","setStatusFilter","StatusChoices","defaultValue","name","console","log","baseURL","authURL","config","withCredentials","paramsSerializer","params","qs","stringify","arrayFormat","axiosInstance","axios","getUsers","a","defaultData","get","useUsers","useQuery","queryKeys","keepPreviousData","OwnerFilter","omitSelf","users","isSuccess","map","user","last_name","option","u","length","getValue","userOption","isClearable","isSearchable","getTags","useTags","TagFilter","tag","t","selectFilter","tagOption","handleChange","isMulti","useStyles","makeStyles","root","overflow","position","minHeight","footer","spacing","background","bottom","appBar","flexDirection","alignContent","justifyContent","appBarLeft","gap","appBarRight","tallIndicator","cardHeader","breakpoints","down","button","projectFormContainer","marginBottom","projectForm","projectFormRow","projectFormEditFields","titleGridItem","projectFormCheckFields","paddingBottom","formSubmitRow","marginTop","ownerDeleteConfirmationButton","color","error","borderColor","ownerDeleteButton","staticProject","paddingTop","projectPhoto","boxShadow","chip","paddingLeft","bigGridGap","cursorPointer","staticProjectDetails","staticProjectDivider","auth","border","borderWidth","dark","light","navButton","notFound","justifyItems","notFoundButton","noProjects","selectTitles","fontSize","fontWeight","index","Filter","setParams","classes","useImmer","statusFilter","useEffect","status","createParams","className","container","Divider","queryClient","QueryClient","defaultOptions","queries","retry","onError","response","setQueryData","NoProjects","CustomTextField","field","multiline","component","TextField","ActiveField","FormControlLabel","control","Switch","type","checked","CustomMultiSelect","form","initSelections","setFieldValue","isOptionSelected","val","_id","hideSelectedOptions","Loading","LinearProgress","CollaboratorField","convertToSelectionFormat","arr","collaborators","htmlFor","useState","creatableOptions","setCreatableOptions","onCreateOption","string","newValue","TagField","CustomCreatableMultiSelect","ProjectForm","onSubmit","onCancel","initialValues","enableReinitialize","validationSchema","Yup","title","max","required","description","min","notRequired","githubLink","matches","active","direction","Button","size","onClick","ProjectFormEdit","projectToEdit","setOpen","useQueryClient","editMutation","useMutation","body","put","onSuccess","invalidateQueries","submitEdittedProject","values","mutate","prevState","Container","disableGutters","EditFormModal","project","open","Dialog","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","DeleteConfirmationModal","deleteMutation","delete","handleClose","DialogContentText","DialogActions","autoFocus","ProjectOwnerImage","owner","StaticProject","url","ownerProject","gutterBottom","Chip","icon","toString","collaborator","avatar","Card","CardHeader","disableTypography","action","isOwner","IconButton","href","test","rel","target","zulip_id","subheader","Link","batch","CardContent","paragraph","lg","ProjectList","projects","getProjects","useProjects","Auth","AppBar","logo","ProjectFormAdd","addMutation","post","submitProjectToAdd","AddFormModal","isSmallScreen","useMediaQuery","Nav","allProjects","setAllProjects","Tabs","indicator","Tab","me","Home","isLoading","Promise","resolve","getQueryData","initialData","snackbarError","Collapse","in","Snackbar","anchorOrigin","vertical","horizontal","Alert","severity","Footer","NotFound","App","ThemeProvider","exact","path","ReactDOM","render","StrictMode","QueryClientProvider","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.19c5cfa5.chunk.js","sourcesContent":["import { ITag, IUser } from './types';\n\nexport enum SortMethods {\n    'Last Updated' = 'last updated',\n    'First Updated' = 'first updated',\n    'Last Created' = 'last created',\n    'First Created' = 'first created',\n    'Latest Batch' = 'latest batch',\n    'Oldest Batch' = 'oldest batch',\n}\n\nexport type TTagFilter = ITag['value'][] | undefined;\nexport type TOwnerFilter = IUser['rcId'] | undefined;\n\nexport type QueryParams = {\n    status?: boolean;\n    tags?: TTagFilter;\n    user?: TOwnerFilter;\n    sort: SortMethods;\n    me?: boolean;\n};\n","import { createTheme } from '@material-ui/core/styles';\n\nexport const rcColors = {\n    pink: '#BD5179',\n    green: '#23A050',\n    backgroundGreen: '#eef7f1',\n    borderGreen: '#3dc06c',\n    orange: '#D28E56',\n    blue: '#3C89C3',\n    backgroundBlue: '#d9efff',\n    borderBlue: '@4d9bd8',\n    purple: '#815FA5',\n    red: 'rgb(217, 90, 136)',\n    backgroundRed: '#fedce9',\n    borderRed: '#d95a88',\n};\nimport { green, purple } from '@material-ui/core/colors';\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            main: green[300],\n        },\n        secondary: {\n            main: purple[300],\n        },\n    },\n});\n","import create from 'zustand';\nimport { ITag, IUser } from '../types/types';\nimport { TTagFilter, TOwnerFilter, SortMethods } from '../types/filterTypes';\n\nexport interface AppState {\n    sortFilter: SortMethods;\n    tagFilter: TTagFilter;\n    ownerFilter: TOwnerFilter;\n    addForm: boolean;\n    setSortFilter: (sort: SortMethods) => void;\n    setTagFilter: (tags: ITag['value'][] | undefined) => void;\n    setOwnerFilter: (rcId: IUser['rcId'] | undefined) => void;\n}\nexport const useStore = create<AppState>((set) => ({\n    sortFilter: SortMethods['Last Updated'],\n    tagFilter: undefined,\n    ownerFilter: undefined,\n    addForm: false,\n    setSortFilter: (sort) => set({ sortFilter: sort }),\n    setTagFilter: (tags) => set({ tagFilter: tags }),\n    setOwnerFilter: (rcId) => {\n        set({\n            ownerFilter: rcId,\n        });\n    },\n}));\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React from 'react';\nimport { Avatar, Hidden, Typography } from '@material-ui/core';\nimport { components, OptionTypeBase, StylesConfig } from 'react-select';\nimport { FaUser, FaTag, FaTags } from 'react-icons/fa';\nimport { MdSort } from 'react-icons/md';\n\nexport const Option = (props: any): JSX.Element => {\n    const style = {\n        display: 'flex',\n        alignItems: 'center',\n    };\n    return (\n        <components.Option {...props}>\n            <div style={style}>\n                <Avatar\n                    alt={props.label}\n                    src={props.value.image_path}\n                    variant=\"circle\"\n                    style={{\n                        width: '24px',\n                        height: '24px',\n                        marginLeft: '2px',\n                        marginRight: '5px',\n                    }}\n                />\n                <Typography variant=\"body2\">{props.children}</Typography>\n            </div>\n        </components.Option>\n    );\n};\n\nexport const Menu = (props: any): JSX.Element => {\n    return (\n        <components.Menu {...props}>\n            <Typography variant=\"body2\">{props.children}</Typography>\n        </components.Menu>\n    );\n};\n\nexport const SingleValue = (props: any): JSX.Element => {\n    return (\n        <components.SingleValue {...props}>\n            <Typography variant=\"body2\">{props.children}</Typography>\n        </components.SingleValue>\n    );\n};\n\nexport const Placeholder = (props: any): JSX.Element => {\n    return (\n        <components.Placeholder {...props}>\n            <Typography variant=\"body2\">{props.selectProps.placeholder}</Typography>\n        </components.Placeholder>\n    );\n};\n\nexport const SortControl = (props: any): JSX.Element => {\n    const style = { height: '16px', alignSelf: 'center', marginLeft: '10px', cursor: 'pointer' };\n    return (\n        <components.Control {...props}>\n            <span style={style}>\n                <MdSort />\n            </span>\n            {props.children}\n        </components.Control>\n    );\n};\n\nexport const UserControl = (props: any): JSX.Element => {\n    const style = {\n        height: '16px',\n        alignSelf: 'center',\n        marginLeft: '10px',\n        cursor: 'pointer',\n    };\n    return (\n        <components.Control {...props}>\n            <Hidden xsDown>\n                <span style={style}>\n                    <FaUser />\n                </span>\n            </Hidden>\n            {props.children}\n        </components.Control>\n    );\n};\n\nexport const TagControl = (props: any): JSX.Element => {\n    const style = { height: '16px', alignSelf: 'center', marginLeft: '10px', cursor: 'pointer' };\n    return (\n        <components.Control {...props}>\n            <Hidden xsDown>\n                <span style={style}>\n                    <FaTags />\n                </span>\n            </Hidden>\n            {props.children}\n        </components.Control>\n    );\n};\n\nexport const UserSingleValue = (props: any): JSX.Element => {\n    const style = {\n        margin: '3px',\n        padding: '3px',\n        borderRadius: '16px',\n        backgroundColor: 'rgb(230, 230, 230)',\n        display: 'flex',\n        alignItems: 'center',\n    };\n    return (\n        <components.SingleValue {...props}>\n            <div style={style}>\n                <Avatar\n                    alt={props.data.value.first_name}\n                    src={props.data.value.image_path}\n                    variant=\"circle\"\n                    style={{\n                        width: '24px',\n                        height: '24px',\n                        marginLeft: '2px',\n                        marginRight: '3px',\n                    }}\n                />\n                <Typography style={{ marginRight: '5px', padding: '1px' }} variant=\"body2\">\n                    {props.children}\n                </Typography>\n            </div>\n        </components.SingleValue>\n    );\n};\nexport const UserMultiValueLabel = (props: any): JSX.Element => {\n    const style = {\n        display: 'flex',\n        alignItems: 'center',\n    };\n    return (\n        <components.MultiValueLabel {...props}>\n            <div style={style}>\n                <Avatar\n                    alt={props.data.value.first_name}\n                    src={props.data.value.image_path}\n                    variant=\"circle\"\n                    style={{\n                        width: '24px',\n                        height: '24px',\n                        marginLeft: '2px',\n                        marginRight: '3px',\n                    }}\n                />\n                <Typography style={{ padding: '1px' }} variant=\"body2\">\n                    {props.data.label}\n                </Typography>\n            </div>\n        </components.MultiValueLabel>\n    );\n};\n\nexport const TagMultiValueLabel = (props: any): JSX.Element => {\n    const style = {\n        display: 'flex',\n        alignItems: 'center',\n    };\n    return (\n        <components.MultiValueLabel {...props}>\n            <div style={style}>\n                <FaTag style={{ padding: '1px', marginLeft: '2px', marginRight: '5px' }} />\n                <Typography style={{ padding: '1px' }} variant=\"body2\">\n                    {props.data.label}\n                </Typography>\n            </div>\n        </components.MultiValueLabel>\n    );\n};\n\nexport const multiStyles: StylesConfig<OptionTypeBase, boolean> = {\n    multiValue: (styles) => ({ ...styles, borderRadius: '16px' }),\n    multiValueRemove: (styles) => ({ ...styles, borderBottomRightRadius: '16px', borderTopRightRadius: '16px' }),\n};\n","import { Grid, Typography } from '@material-ui/core';\nimport React from 'react';\nimport Select from 'react-select';\nimport { IOption } from '../../types/types';\nimport { useStore, AppState } from '../../utils/store';\nimport { Menu, SingleValue, SortControl } from '../HelperComponents/CustomSelectComponents';\nimport { SortMethods } from '../../types/filterTypes';\n\nconst Sort = (): JSX.Element => {\n    const sortFilter = useStore((state: AppState) => state.sortFilter);\n    const setSortFilter = useStore((state: AppState) => state.setSortFilter);\n\n    const options: IOption<SortMethods>[] = [\n        { value: SortMethods['Last Updated'], label: 'Last Updated' },\n        { value: SortMethods['First Updated'], label: 'First Updated' },\n        { value: SortMethods['Last Created'], label: 'Last Created' },\n        { value: SortMethods['First Created'], label: 'First Created' },\n        { value: SortMethods['Latest Batch'], label: 'Latest Batch' },\n        { value: SortMethods['Oldest Batch'], label: 'Oldest Batch' },\n    ];\n\n    const getValue = () => {\n        return options.filter((sort) => sortFilter?.includes(sort.value));\n    };\n\n    return (\n        <Grid item xs={12} sm={6} md={4}>\n            <Typography variant=\"subtitle2\">Sort</Typography>\n            <Select\n                options={options}\n                components={{ Control: SortControl, Menu, SingleValue }}\n                value={getValue()}\n                onChange={(e) => {\n                    if (e) setSortFilter(e.value);\n                }}\n            />\n        </Grid>\n    );\n};\n\nexport default Sort;\n","import React from 'react';\nimport { StatusChoices } from './Filter';\nimport { Updater } from 'use-immer';\nimport Select from 'react-select';\nimport { Grid, Typography } from '@material-ui/core';\nimport { IOption } from '../../types/types';\nimport { Menu, SingleValue } from '../HelperComponents/CustomSelectComponents';\n\ninterface StatusFilterProps {\n    statusFilter: StatusChoices;\n    setStatusFilter: Updater<StatusChoices>;\n}\n\nconst StatusFilter = ({ setStatusFilter }: StatusFilterProps): JSX.Element => {\n    const options: IOption<StatusChoices>[] = [\n        { value: StatusChoices['Active'], label: 'Active' },\n        { value: StatusChoices['Inactive'], label: 'Inactive' },\n        { value: StatusChoices['All'], label: 'All' },\n    ];\n\n    return (\n        <Grid item xs={12} sm={6} md={4}>\n            <Typography variant=\"subtitle2\">Status</Typography>\n            <Select\n                defaultValue={options[0]}\n                components={{ Menu, SingleValue }}\n                options={options}\n                name=\"status-filter\"\n                onChange={(e) => {\n                    console.log(e?.value);\n                    setStatusFilter(e?.value as StatusChoices);\n                }}\n            />\n        </Grid>\n    );\n};\n\nexport default StatusFilter;\n","import axios, { AxiosRequestConfig } from 'axios';\nimport { paramsSerializer } from '../utils/paramParser';\n\nexport const baseURL =\n    process.env.NODE_ENV === 'development'\n        ? 'http://localhost:4000/api'\n        : 'https://glacial-ravine-25144.herokuapp.com/';\n\nexport const authURL = baseURL + '/auth';\n\nconst config: AxiosRequestConfig = { baseURL, withCredentials: true, paramsSerializer };\nexport const axiosInstance = axios.create(config);\n","import qs from 'qs';\nimport { StatusChoices } from '../components/Filter/Filter';\nimport { SortMethods } from '../types/filterTypes';\nimport { TTagFilter, TOwnerFilter, QueryParams } from '../types/filterTypes';\n\nexport function createParams(\n    statusFilter: StatusChoices,\n    tagFilter: TTagFilter,\n    ownerFilter: TOwnerFilter,\n    sortFilter: SortMethods,\n): QueryParams {\n    // parse UI state into format for axios params\n    const params = {} as QueryParams;\n\n    /**\n     * if statusFilter is active, return active projects\n     * if statusFilter is inactive, return inactive projects\n     * if statusFilter is all, do not send as a query param and retrieve all projects\n     */\n    switch (statusFilter) {\n        case 'active':\n            params.status = true;\n            break;\n        case 'inactive':\n            params.status = false;\n            break;\n        default:\n            params.status = undefined;\n    }\n\n    if (tagFilter) {\n        params.tags = tagFilter;\n    }\n    if (ownerFilter) {\n        params.user = ownerFilter;\n    }\n\n    params.sort = sortFilter;\n    return params;\n}\n\nexport function paramsSerializer(params: string[]): string {\n    // parse tag array into format acceptable for axios query params\n    return qs.stringify(params, { arrayFormat: 'repeat' });\n}\n","export default {\n    users: 'users',\n    tags: 'tags',\n    projects: 'projects',\n    snackbarError: 'snackbarError',\n    isAuth: 'isAuth',\n};\n","import { useQuery, useQueryClient, UseQueryResult } from 'react-query';\nimport { axiosInstance } from '../utils/axiosInstance';\nimport { IUser } from '../types/types';\nimport queryKeys from '../utils/queryKeys';\nimport { AxiosError } from 'axios';\n\ninterface UserQueryParams {\n    omitSelf: string;\n}\n\nconst getUsers = async (params: UserQueryParams): Promise<IUser[]> => {\n    const defaultData: IUser[] = [];\n    const { data = defaultData } = await axiosInstance.get('/users/', { params });\n    return data;\n};\n\nconst useUsers = (params: UserQueryParams): UseQueryResult<IUser[], AxiosError> => {\n    return useQuery([queryKeys.users, params], () => getUsers(params), { keepPreviousData: true });\n};\n\nexport function usePrefetchUsers(params: UserQueryParams): void {\n    const queryClient = useQueryClient();\n    queryClient.prefetchQuery(queryKeys.users, () => getUsers(params));\n}\n\nexport default useUsers;\n","import React from 'react';\nimport Select from 'react-select';\nimport useUsers from '../../hooks/useUsers';\nimport { IUser, IOption } from '../../types/types';\nimport { useStore, AppState } from '../../utils/store';\nimport { Grid, Typography } from '@material-ui/core';\nimport { UserControl, Menu, Option, Placeholder, UserSingleValue } from '../HelperComponents/CustomSelectComponents';\n\nconst OwnerFilter = (): JSX.Element => {\n    const setOwnerFilter = useStore((state: AppState) => state.setOwnerFilter);\n    const ownerFilter = useStore((state: AppState) => state.ownerFilter);\n    const { data: users, isSuccess } = useUsers({\n        omitSelf: 'false',\n    });\n\n    const handleChange = (userOption: IOption<IUser>) => {\n        userOption ? setOwnerFilter(userOption.value.rcId) : setOwnerFilter(undefined);\n    };\n\n    if (isSuccess && users) {\n        const options: IOption<IUser>[] = users.map((user: IUser) => {\n            return {\n                value: user,\n                label: `${user.first_name} ${user.last_name}`,\n            };\n        });\n\n        const getValue = () => {\n            const option = options.filter((u) => u.value.rcId === ownerFilter);\n            return option.length > 0 ? option[0] : null;\n        };\n\n        return (\n            <Grid item xs={12} sm={6} md={8}>\n                <Typography variant=\"subtitle2\">Owner Filter</Typography>\n                <Select\n                    value={getValue()}\n                    components={{ Control: UserControl, Option, Menu, Placeholder, SingleValue: UserSingleValue }}\n                    options={options}\n                    name=\"user-filter\"\n                    onChange={(e) => handleChange(e as IOption<IUser>)}\n                    placeholder=\"Select user...\"\n                    isClearable\n                    isSearchable\n                />\n            </Grid>\n        );\n    }\n\n    return (\n        <Grid item xs={12} sm={12} md={8}>\n            <Typography variant=\"subtitle2\">Owner Filter</Typography>\n            <Select\n                components={{ Control: UserControl, Option, Menu, Placeholder, SingleValue: UserSingleValue }}\n                name=\"user-filter\"\n                placeholder=\"Select user...\"\n                isClearable\n                isSearchable\n            />\n        </Grid>\n    );\n};\n\nexport default OwnerFilter;\n","import { useQuery, useQueryClient, UseQueryResult } from 'react-query';\nimport { axiosInstance } from '../utils/axiosInstance';\nimport { ITag } from '../types/types';\nimport queryKeys from '../utils/queryKeys';\nimport { AxiosError } from 'axios';\n\nconst getTags = async (): Promise<ITag[]> => {\n    const defaultData: ITag[] = [];\n    const { data = defaultData } = await axiosInstance.get('/tags/');\n    return data;\n};\n\nconst useTags = (): UseQueryResult<ITag[], AxiosError> => {\n    return useQuery(queryKeys.tags, getTags) as UseQueryResult<ITag[], AxiosError>;\n};\n\nexport function usePrefetchTags(): void {\n    const queryClient = useQueryClient();\n    queryClient.prefetchQuery(queryKeys.tags, getTags);\n}\n\nexport default useTags;\n","import React, { useEffect } from 'react';\nimport Sort from './Sort';\nimport { useStore, AppState } from '../../utils/store';\nimport { createParams } from '../../utils/paramParser';\nimport { QueryParams } from '../../types/filterTypes';\nimport { Divider, Grid } from '@material-ui/core';\nimport StatusFilter from './StatusFilter';\nimport OwnerFilter from './OwnerFilter';\nimport TagFilter from './TagFilter';\nimport { useImmer } from 'use-immer';\nimport { useStyles } from '../../static/styles';\n\nexport enum StatusChoices {\n    'Active' = 'active',\n    'Inactive' = 'inactive',\n    'All' = 'all',\n}\n\ninterface FilterProps {\n    setParams: React.Dispatch<React.SetStateAction<QueryParams>>;\n}\n\nconst Filter = ({ setParams }: FilterProps): JSX.Element => {\n    const classes = useStyles();\n    const [statusFilter, setStatusFilter] = useImmer<StatusChoices>(StatusChoices['Active']);\n    const tagFilter = useStore((state: AppState) => state.tagFilter);\n    const ownerFilter = useStore((state: AppState) => state.ownerFilter);\n    const sortFilter = useStore((state: AppState) => state.sortFilter);\n\n    useEffect(() => {\n        const params = createParams(statusFilter, tagFilter, ownerFilter, sortFilter);\n        setParams(params);\n    }, [statusFilter, tagFilter, ownerFilter, sortFilter]);\n\n    return (\n        <>\n            <Grid className={classes.filter} container spacing={1}>\n                <TagFilter />\n                <StatusFilter statusFilter={statusFilter} setStatusFilter={setStatusFilter} />\n                <OwnerFilter />\n                <Sort />\n            </Grid>\n            <Divider variant=\"fullWidth\" style={{ marginTop: '20px', marginBottom: '20px' }} />\n        </>\n    );\n};\n\nexport default Filter;\n","import React from 'react';\nimport Select from 'react-select';\nimport { useStore, AppState } from '../../utils/store';\nimport useTags from '../../hooks/useTags';\nimport { ITag, IOption } from '../../types/types';\nimport { TTagFilter } from '../../types/filterTypes';\nimport { Grid, Typography } from '@material-ui/core';\nimport {\n    TagControl,\n    Menu,\n    Placeholder,\n    TagMultiValueLabel,\n    multiStyles,\n} from '../HelperComponents/CustomSelectComponents';\n\nconst TagFilter = (): JSX.Element => {\n    const setTagFilter = useStore((state: AppState) => state.setTagFilter);\n    const tagFilter = useStore((state: AppState) => state.tagFilter);\n\n    const { data: tags, isSuccess } = useTags();\n\n    const handleChange = (selectFilter: IOption<ITag>[]) => {\n        const tags: TTagFilter = selectFilter.map((tagOption) => tagOption.value.value);\n        // set tags to undefined if there are no tags to filter by\n        tags.length > 0 ? setTagFilter(tags) : setTagFilter(undefined);\n    };\n\n    if (isSuccess && tags) {\n        const options: IOption<ITag>[] = tags.map((tag: ITag) => {\n            return {\n                value: tag,\n                label: tag.value,\n            };\n        });\n\n        const getValue = () => {\n            return options.filter((t) => tagFilter?.includes(t.value.value));\n        };\n\n        return (\n            <Grid item xs={12} sm={6} md={8}>\n                <Typography variant=\"subtitle2\">Tag Filter</Typography>\n                <Select\n                    value={getValue()}\n                    components={{ Control: TagControl, Menu, MultiValueLabel: TagMultiValueLabel, Placeholder }}\n                    options={options}\n                    name=\"tag-filter\"\n                    onChange={(e) => handleChange(e as IOption<ITag>[])}\n                    placeholder=\"Select tags...\"\n                    isMulti\n                    isClearable\n                    isSearchable\n                    styles={multiStyles}\n                />\n            </Grid>\n        );\n    }\n\n    return (\n        <Grid item xs={12} sm={6} md={8}>\n            <Typography variant=\"subtitle2\">Tag Filter</Typography>\n            <Select\n                components={{ Control: TagControl, Menu, MultiValueLabel: TagMultiValueLabel, Placeholder }}\n                name=\"tag-filter\"\n                placeholder=\"Select tags...\"\n                isMulti\n                isClearable\n                isSearchable\n                styles={multiStyles}\n            />\n        </Grid>\n    );\n};\n\nexport default TagFilter;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n    (theme) => ({\n        root: {\n            width: '100%',\n            height: '100%',\n            overflow: 'hidden',\n            position: 'relative',\n            margin: '80px 0',\n            minHeight: '100vh',\n        },\n        footer: {\n            padding: theme.spacing(1),\n            background: theme.palette.primary.main,\n            position: 'fixed',\n            bottom: 0,\n            width: '100%',\n        },\n        appBar: {\n            flexDirection: 'row',\n            alignContent: 'center',\n            justifyContent: 'space-between',\n            backgroundColor: theme.palette.primary.main,\n        },\n        appBarLeft: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            marginLeft: theme.spacing(3),\n            gap: theme.spacing(2),\n        },\n        appBarRight: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            gap: theme.spacing(3),\n            marginRight: theme.spacing(3),\n        },\n        tallIndicator: {\n            backgroundColor: theme.palette.secondary.main,\n            height: '5px',\n        },\n        filter: {\n            padding: theme.spacing(1.5),\n        },\n        cardHeader: {\n            [theme.breakpoints.down('xs')]: {\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                gap: theme.spacing(1),\n            },\n        },\n        button: {\n            marginLeft: theme.spacing(2.5),\n            marginRight: theme.spacing(2.5),\n        },\n        projectFormContainer: {\n            marginBottom: theme.spacing(1),\n            padding: theme.spacing(0.5),\n        },\n        projectForm: {\n            // flexGrow: 1,\n        },\n        projectFormRow: {\n            alignItems: 'center',\n        },\n        projectFormEditFields: {\n            marginBottom: theme.spacing(1.45),\n            width: '100%',\n        },\n        titleGridItem: {\n            marginRight: theme.spacing(3),\n        },\n        projectFormCheckFields: {\n            paddingBottom: theme.spacing(1.5),\n        },\n        formSubmitRow: {\n            justifyContent: 'center',\n            marginTop: theme.spacing(2.5),\n        },\n        ownerDeleteConfirmationButton: {\n            color: theme.palette.error.main,\n            borderColor: theme.palette.error.main,\n        },\n        ownerDeleteButton: {\n            color: theme.palette.error.main,\n            borderColor: theme.palette.error.main,\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(2),\n        },\n        staticProject: {\n            margin: theme.spacing(1),\n            marginBottom: theme.spacing(2),\n            padding: theme.spacing(0.5),\n            paddingTop: theme.spacing(1.5),\n        },\n        projectPhoto: {\n            boxShadow: '.05rem .05rem .2rem gray',\n            marginRight: theme.spacing(0.75),\n        },\n        marginBottom: {\n            marginBottom: theme.spacing(0.5),\n        },\n        chip: {\n            margin: theme.spacing(0.25),\n            '& > svg': {\n                paddingLeft: theme.spacing(0.5),\n            },\n        },\n        bigGridGap: {\n            gap: theme.spacing(1.5),\n        },\n        cursorPointer: {\n            cursor: 'pointer',\n        },\n        staticProjectDetails: {\n            paddingLeft: theme.spacing(8),\n            [theme.breakpoints.down('xs')]: {\n                paddingLeft: 0,\n            },\n        },\n        staticProjectDivider: {\n            marginTop: theme.spacing(-3),\n            marginBottom: theme.spacing(1.5),\n        },\n        auth: {\n            width: 'unset',\n            border: 'solid',\n            borderWidth: theme.spacing(2),\n            borderColor: theme.palette.primary.dark,\n            backgroundColor: theme.palette.primary.light,\n            [theme.breakpoints.down('xs')]: {\n                margin: theme.spacing(2),\n            },\n            marginTop: theme.spacing(10),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            padding: theme.spacing(3),\n            gap: theme.spacing(4),\n        },\n        navButton: {\n            margin: theme.spacing(0.75),\n        },\n        notFound: {\n            alignSelf: 'center',\n            display: 'flex',\n            justifyItems: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            gap: theme.spacing(2),\n            marginTop: theme.spacing(8),\n        },\n        notFoundButton: {\n            width: theme.spacing(24),\n        },\n        noProjects: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: theme.spacing(8),\n        },\n        selectTitles: {\n            color: 'rgba(0, 0, 0, 0.54)',\n            fontSize: '12px',\n            fontWeight: 400,\n            marginBottom: theme.spacing(0.5),\n        },\n    }),\n    { index: 1 },\n);\n","import { AxiosError } from 'axios';\nimport { QueryClient } from 'react-query';\nimport queryKeys from './queryKeys';\n\nexport const queryClient = new QueryClient({\n    defaultOptions: {\n        queries: {\n            retry: false,\n            onError: (e) => {\n                const error = e as AxiosError;\n                if (error.response?.status === 401) {\n                    queryClient.setQueryData(queryKeys.isAuth, false);\n                }\n                if (error.response?.status === 400) {\n                    queryClient.setQueryData(queryKeys.snackbarError, true);\n                }\n            },\n        },\n    },\n});\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useStyles } from '../../static/styles';\n\nconst NoProjects = (): JSX.Element => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.noProjects}>\n            <Typography variant=\"h5\" color=\"textSecondary\">\n                No projects matching your search criteria have been found.\n            </Typography>\n        </div>\n    );\n};\n\nexport default NoProjects;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { TextField, Switch } from 'formik-material-ui';\n\nimport { FormControlLabel } from '@material-ui/core';\nimport { useStyles } from '../../../../../static/styles';\n\nexport interface IFormikLabelProps extends FieldProps {\n    label: string;\n    placeholder?: string;\n    multiline?: boolean;\n}\n\nexport const CustomTextField = ({ label, field, multiline = false }: IFormikLabelProps): JSX.Element => {\n    const classes = useStyles();\n\n    return (\n        <Field\n            name={field.name}\n            value={field.value}\n            label={label}\n            component={TextField}\n            // variant=\"outlined\"\n            multiline={multiline}\n            className={classes.projectFormEditFields}\n        />\n    );\n};\n\nexport const ActiveField = ({ field }: IFormikLabelProps): JSX.Element => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.projectFormCheckFields}>\n            <FormControlLabel\n                control={\n                    <Field component={Switch} color=\"primary\" name={field.name} type=\"checkbox\" checked={field.value} />\n                }\n                label={field.value === true ? 'Active' : 'Inactive'}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport Select, { OptionsType, OptionTypeBase, ValueType } from 'react-select';\nimport { FieldProps } from 'formik';\nimport {\n    UserControl,\n    Menu,\n    Placeholder,\n    UserMultiValueLabel,\n    Option,\n    multiStyles,\n} from '../../../../HelperComponents/CustomSelectComponents';\nimport { ObjectId } from 'mongoose';\n\nexport interface IUserFromClient {\n    _id: ObjectId;\n    rcId: number;\n    image_path: string;\n    first_name: string;\n    last_name: string;\n}\n\nexport interface ICollabOption {\n    label: string;\n    value: IUserFromClient;\n}\n\ninterface CustomSelectProps extends FieldProps {\n    options: OptionsType<ICollabOption>;\n    initSelections?: OptionsType<ICollabOption>;\n    isMulti?: boolean;\n    placeholder?: string;\n}\n\nconst CustomMultiSelect = ({\n    placeholder,\n    field,\n    form,\n    options,\n    isMulti = true,\n    initSelections,\n}: CustomSelectProps): JSX.Element => {\n    const onChange = (option: ValueType<ICollabOption, true>) => {\n        form.setFieldValue(\n            field.name,\n            (option as ICollabOption[]).map((item: ICollabOption) => item.value),\n        );\n    };\n\n    const getValue = () => {\n        if (!field.value) {\n            return isMulti ? [] : ('' as unknown as OptionTypeBase);\n        }\n    };\n\n    return (\n        <Select\n            components={{ Control: UserControl, Menu, MultiValueLabel: UserMultiValueLabel, Placeholder, Option }}\n            name={field.name}\n            defaultValue={initSelections}\n            value={field.value ? initSelections : getValue()}\n            onChange={onChange}\n            placeholder={placeholder}\n            options={options}\n            isMulti={isMulti}\n            styles={multiStyles}\n            isOptionSelected={(option) => {\n                const valIds = field.value.map((val: IUserFromClient) => val._id);\n                return valIds.includes(option.value._id);\n            }}\n            hideSelectedOptions={true}\n        />\n    );\n};\n\nexport default CustomMultiSelect;\n","import { LinearProgress } from '@material-ui/core';\nimport React from 'react';\n\nconst Loading = (): JSX.Element => {\n    return <LinearProgress />;\n};\n\nexport default Loading;\n","import React from 'react';\nimport { ErrorMessage, Field } from 'formik';\n\nimport CustomMultiSelect, { IUserFromClient } from './generic/CustomMultiSelect';\nimport { IFormikLabelProps } from './generic/FormFields';\n\nimport useUsers from '../../../../hooks/useUsers';\nimport Loading from '../../../HelperComponents/Loading';\nimport { useStyles } from '../../../../static/styles';\n\nimport { Typography } from '@material-ui/core';\n\nexport const CollaboratorField = ({ label, field }: IFormikLabelProps): JSX.Element => {\n    const params = {\n        omitSelf: 'true',\n    };\n    const { data, isSuccess } = useUsers(params);\n    const classes = useStyles();\n\n    const convertToSelectionFormat = (arr: IUserFromClient[]) => {\n        return arr.map((u) => {\n            return {\n                label: `${u.first_name} ${u.last_name}`,\n                value: {\n                    _id: u._id,\n                    first_name: u.first_name,\n                    last_name: u.last_name,\n                    rcId: u.rcId,\n                    image_path: u.image_path,\n                },\n            };\n        });\n    };\n\n    if (isSuccess && data) {\n        const collaborators = convertToSelectionFormat(data);\n        const initSelections = convertToSelectionFormat(field.value);\n\n        return (\n            <div>\n                <label htmlFor={field.name}>\n                    <Typography className={classes.selectTitles}>{label}</Typography>\n                </label>\n                <Field\n                    name={field.name}\n                    value={field.value}\n                    component={CustomMultiSelect}\n                    options={collaborators}\n                    initSelections={initSelections}\n                />\n                <ErrorMessage name={field.name} />\n            </div>\n        );\n    }\n\n    return <Loading />;\n};\n","import React, { useState } from 'react';\nimport { OptionsType, OptionTypeBase, ValueType } from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { FieldProps } from 'formik';\nimport {\n    TagControl,\n    Menu,\n    Placeholder,\n    TagMultiValueLabel,\n    multiStyles,\n} from '../../../../HelperComponents/CustomSelectComponents';\nimport { ObjectId } from 'mongoose';\n\nexport interface ITagFromClient {\n    _id?: ObjectId;\n    value: string;\n}\n\nexport interface ITagOption {\n    label: string;\n    value: ITagFromClient;\n}\n\nexport interface CustomSelectProps extends FieldProps {\n    options: OptionsType<ITagOption>;\n    initSelections?: OptionsType<ITagOption>;\n    isMulti?: boolean;\n    placeholder?: string;\n}\n\nconst CustomMultiSelect = ({\n    placeholder,\n    field,\n    form,\n    options,\n    isMulti = true,\n    initSelections,\n}: CustomSelectProps): JSX.Element => {\n    const [creatableOptions, setCreatableOptions] = useState(options);\n\n    const onChange = (option: ValueType<ITagOption | ITagOption[], true>) => {\n        form.setFieldValue(\n            field.name,\n            (option as ITagOption[]).map((item: ITagOption) => item.value),\n        );\n    };\n\n    const onCreateOption = (string: string) => {\n        const newValue = {\n            label: string,\n            value: {\n                value: string,\n            },\n        };\n        setCreatableOptions([...creatableOptions, newValue]);\n        form.setFieldValue(field.name, [...field.value, newValue.value]);\n    };\n\n    const getValue = () => {\n        if (!field.value) {\n            return isMulti ? [] : ('' as unknown as OptionTypeBase);\n        }\n    };\n\n    return (\n        <CreatableSelect\n            components={{ Control: TagControl, Menu, MultiValueLabel: TagMultiValueLabel, Placeholder }}\n            name={field.name}\n            defaultValue={initSelections}\n            value={field.value ? initSelections : getValue()}\n            onChange={onChange}\n            onCreateOption={onCreateOption}\n            placeholder={placeholder}\n            options={creatableOptions}\n            isMulti={isMulti}\n            isClearable\n            styles={multiStyles}\n            hideSelectedOptions={true}\n            isOptionSelected={(option) => {\n                const valIds = field.value.map((val: ITagFromClient) => val._id);\n                return valIds.includes(option.value._id);\n            }}\n        />\n    );\n};\n\nexport default CustomMultiSelect;\n","import React from 'react';\nimport { ErrorMessage, Field } from 'formik';\n\nimport CustomCreatableMultiSelect, { ITagFromClient } from './generic/CustomCreatableMultiSelect';\nimport { IFormikLabelProps } from './generic/FormFields';\n\nimport useTags from '../../../../hooks/useTags';\nimport Loading from '../../../HelperComponents/Loading';\nimport { useStyles } from '../../../../static/styles';\n\nimport { Typography } from '@material-ui/core';\n\nexport const TagField = ({ label, field }: IFormikLabelProps): JSX.Element => {\n    const { data, isSuccess } = useTags();\n    const classes = useStyles();\n\n    const convertToSelectionFormat = (arr: ITagFromClient[]) => {\n        return arr.map((t) => {\n            return {\n                label: `${t.value}`,\n                value: {\n                    _id: `${t._id}`,\n                    value: `${t.value}`,\n                },\n            };\n        });\n    };\n\n    if (isSuccess && data) {\n        const tags = convertToSelectionFormat(data);\n        const initSelections = convertToSelectionFormat(field.value);\n\n        return (\n            <div>\n                <label htmlFor={field.name}>\n                    <Typography className={classes.selectTitles}>{label}</Typography>\n                </label>\n                <Field\n                    name={field.name}\n                    value={field.value}\n                    component={CustomCreatableMultiSelect}\n                    options={tags}\n                    initSelections={initSelections}\n                />\n                <ErrorMessage name={field.name} />\n            </div>\n        );\n    }\n\n    return <Loading />;\n};\n","import React from 'react';\nimport { Field, Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { ActiveField, CustomTextField } from './generic/FormFields';\nimport { CollaboratorField } from './CollaboratorField';\nimport { ProjectFormSubmitValues } from '../ProjectFormAdd';\nimport { TagField } from './TagField';\n\nimport { useStyles } from '../../../../static/styles';\nimport { Button, Grid } from '@material-ui/core';\n\ninterface Props {\n    onSubmit: (values: ProjectFormSubmitValues) => Promise<void>;\n    onCancel: () => void;\n    initialValues: ProjectFormSubmitValues;\n}\n\nconst ProjectForm = ({ onSubmit, onCancel, initialValues }: Props): JSX.Element => {\n    const classes = useStyles();\n\n    const URL =\n        /^((https?|ftp):\\/\\/)?(www.)?(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n\n    return (\n        <Formik\n            enableReinitialize={true}\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n            validationSchema={Yup.object({\n                title: Yup.string().max(160, 'must be 160 characters or less').required('title is required'),\n                description: Yup.string()\n                    .min(20, 'must be 20 characters or longer')\n                    .max(480, 'must be 480 characters or less')\n                    .notRequired(),\n                githubLink: Yup.string().matches(URL, 'enter a valid url').notRequired(),\n                active: Yup.bool().notRequired(),\n            })}\n        >\n            <Form className={classes.projectForm}>\n                <Grid container direction=\"column\">\n                    <Grid item container className={classes.projectFormRow}>\n                        <Grid item xs={12} sm={10} className={classes.titleGridItem}>\n                            <Field name=\"title\" label=\"Title\" component={CustomTextField} />\n                        </Grid>\n                        <Grid item xs={12} sm={1}>\n                            <Field name=\"active\" component={ActiveField} />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Field name=\"description\" label=\"Description\" multiline={true} component={CustomTextField} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Field name=\"githubLink\" label=\"GitHub Link\" component={CustomTextField} />\n                    </Grid>\n                    <Grid container direction=\"row\" spacing={2}>\n                        <Grid item xs={12}>\n                            <Field name=\"collaborators\" label=\"Collaborators\" component={CollaboratorField} />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Field name=\"tags\" label=\"Tags\" component={TagField} />\n                        </Grid>\n                    </Grid>\n                    <Grid container className={classes.formSubmitRow}>\n                        <Button\n                            type=\"submit\"\n                            size=\"small\"\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            className={classes.button}\n                        >\n                            Submit\n                        </Button>\n                        <Button\n                            type=\"button\"\n                            onClick={onCancel}\n                            size=\"small\"\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            style={{ color: 'red', borderColor: 'red' }}\n                            className={classes.button}\n                        >\n                            Cancel\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Form>\n        </Formik>\n    );\n};\n\nexport default ProjectForm;\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { axiosInstance } from '../../../utils/axiosInstance';\nimport queryKeys from '../../../utils/queryKeys';\nimport ProjectForm from './form-subs/ProjectForm';\nimport { IProject, IProjectEdit } from '../../../types/types';\nimport { ProjectFormSubmitValues } from './ProjectFormAdd';\n\nimport { useStyles } from '../../../static/styles';\nimport { Container } from '@material-ui/core';\n\ninterface ProjectFormEditProps {\n    projectToEdit: IProject;\n    setOpen: Dispatch<SetStateAction<boolean>>;\n}\nconst ProjectFormEdit = ({ projectToEdit, setOpen }: ProjectFormEditProps): JSX.Element => {\n    const classes = useStyles();\n    const queryClient = useQueryClient();\n    const editMutation = useMutation(\n        (body: IProjectEdit) => axiosInstance.put(`/projects/${projectToEdit._id}`, body, { withCredentials: true }),\n        {\n            onSuccess: () => {\n                queryClient.invalidateQueries(queryKeys.projects);\n                queryClient.invalidateQueries(queryKeys.tags);\n            },\n        },\n    );\n\n    const submitEdittedProject = async (values: ProjectFormSubmitValues) => {\n        editMutation.mutate({\n            ...projectToEdit,\n            title: values.title,\n            description: values.description,\n            githubLink: values.githubLink,\n            collaborators: values.collaborators,\n            tags: values.tags,\n            active: values.active,\n        });\n\n        // maybe incorporate visual feedback for successful submission?\n        setOpen((prevState: boolean) => !prevState);\n    };\n\n    const onCancel = () => {\n        setOpen((prevState: boolean) => !prevState);\n    };\n\n    const initialValues: ProjectFormSubmitValues = {\n        title: projectToEdit.title || '',\n        description: projectToEdit.description || '',\n        githubLink: projectToEdit.githubLink || '',\n        collaborators: projectToEdit.collaborators || [],\n        tags: projectToEdit.tags || [],\n        active: projectToEdit.active || true,\n    };\n\n    return (\n        <div>\n            <Container disableGutters className={classes.projectFormContainer}>\n                <ProjectForm onSubmit={submitEdittedProject} initialValues={initialValues} onCancel={onCancel} />\n            </Container>\n        </div>\n    );\n};\n\nexport default ProjectFormEdit;\n","import React, { useState } from 'react';\n\nimport { IProject } from '../../../types/types';\n\nimport { Dialog, DialogContent, DialogTitle, Button } from '@material-ui/core';\nimport ProjectFormEdit from './ProjectFormEdit';\n\nconst EditFormModal = (project: IProject): JSX.Element => {\n    const [open, setOpen] = useState(false);\n\n    return (\n        <div>\n            <Button onClick={() => setOpen(true)} size=\"small\" color=\"primary\" variant=\"outlined\">\n                Edit\n            </Button>\n\n            <Dialog open={open} onClose={() => setOpen(false)} maxWidth=\"md\" fullWidth={true}>\n                <DialogTitle>{'Edit Project'}</DialogTitle>\n                <DialogContent>\n                    <ProjectFormEdit projectToEdit={project} setOpen={setOpen} />\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default EditFormModal;\n","import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { axiosInstance } from '../../utils/axiosInstance';\nimport { IProject } from '../../types/types';\nimport queryKeys from '../../utils/queryKeys';\nimport { useStyles } from '../../static/styles';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button } from '@material-ui/core';\n\nconst DeleteConfirmationModal = (project: IProject): JSX.Element => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const queryClient = useQueryClient();\n\n    const deleteMutation = useMutation(\n        (project: IProject) =>\n            axiosInstance.delete(`projects/${project._id}`, {\n                data: project,\n                withCredentials: true,\n            }),\n        {\n            onSuccess: () => {\n                queryClient.invalidateQueries(queryKeys.projects);\n                queryClient.invalidateQueries(queryKeys.tags);\n            },\n        },\n    );\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const deleteAndClose = () => {\n        handleClose();\n        deleteMutation.mutate(project);\n    };\n\n    return (\n        <div>\n            <Button className={classes.ownerDeleteButton} size=\"small\" variant=\"outlined\" onClick={handleClickOpen}>\n                Delete\n            </Button>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>{'Delete Project'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Are you sure you would like to delete this project listing? This action cannot be undone and\n                        this listing will be gone forever.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button\n                        className={classes.ownerDeleteConfirmationButton}\n                        onClick={deleteAndClose}\n                        variant=\"outlined\"\n                        autoFocus\n                    >\n                        Confirm Deletion\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default DeleteConfirmationModal;\n","import React from 'react';\nimport { IProject } from '../../types/types';\nimport { useStyles } from '../../static/styles';\nimport { Avatar } from '@material-ui/core';\n\nconst ProjectOwnerImage = ({ project }: { project: IProject }): JSX.Element => {\n    const classes = useStyles();\n\n    return (\n        <Avatar\n            className={classes.projectPhoto}\n            variant=\"rounded\"\n            alt={project.owner.first_name + ' ' + project.owner.last_name}\n            src={project.owner.image_path}\n        ></Avatar>\n    );\n};\n\nexport default ProjectOwnerImage;\n","import React from 'react';\nimport { IProject, IProjectOwnerCheck } from '../../types/types';\nimport { useStore, AppState } from '../../utils/store';\nimport { formatURL } from '../../utils/formatUrl';\n\nimport { useStyles } from '../../static/styles';\nimport EditFormModal from './form/EditFormModal';\nimport DeleteConfirmationModal from './DeleteConfirmationModal';\nimport ProjectOwnerImage from './ProjectOwnerImage';\n\nimport { SiGithub, SiZulip } from 'react-icons/si';\nimport { FaTag } from 'react-icons/fa';\nimport {\n    Card,\n    CardContent,\n    Typography,\n    Chip,\n    Link,\n    Avatar,\n    IconButton,\n    Divider,\n    Container,\n    Grid,\n    CardHeader,\n    Hidden,\n} from '@material-ui/core';\n\nconst StaticProject = (project: IProject): JSX.Element => {\n    const classes = useStyles();\n\n    const setOwnerFilter = useStore((state: AppState) => state.setOwnerFilter);\n    const setTagFilter = useStore((state: AppState) => state.setTagFilter);\n    const tagFilter = useStore((state: AppState) => state.tagFilter);\n\n    const ownerProject = project as IProjectOwnerCheck;\n\n    const tags = (\n        <Container disableGutters className={classes.marginBottom}>\n            <Typography variant=\"subtitle2\" gutterBottom>\n                Tags\n            </Typography>\n            {project.tags.length ? (\n                <Grid>\n                    {project.tags.map((tag) => {\n                        return (\n                            <Chip\n                                className={classes.chip}\n                                key={tag._id.toString()}\n                                icon={<FaTag />}\n                                label={`${tag.value}`}\n                                onClick={() => {\n                                    tagFilter ? setTagFilter([...tagFilter, tag.value]) : setTagFilter([tag.value]);\n                                }}\n                            />\n                        );\n                    })}\n                </Grid>\n            ) : (\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    No Tags\n                </Typography>\n            )}\n        </Container>\n    );\n\n    const collaborators = (\n        <Container disableGutters className={classes.marginBottom}>\n            <Typography variant=\"subtitle2\" gutterBottom>\n                Collaborators\n            </Typography>\n            {project.collaborators.length ? (\n                <Grid>\n                    {project.collaborators.map((collaborator) => {\n                        return (\n                            <Chip\n                                className={classes.chip}\n                                key={collaborator._id.toString()}\n                                avatar={\n                                    <Avatar\n                                        alt={`${collaborator.first_name} ${collaborator.last_name}`}\n                                        src={collaborator.image_path}\n                                    ></Avatar>\n                                }\n                                label={`${collaborator.first_name} ${collaborator.last_name}`}\n                                onClick={() => {\n                                    setOwnerFilter(collaborator.rcId);\n                                }}\n                            />\n                        );\n                    })}\n                </Grid>\n            ) : (\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    No Collaborators\n                </Typography>\n            )}\n        </Container>\n    );\n\n    return (\n        <Card className={classes.staticProject}>\n            <CardHeader\n                className={classes.cardHeader}\n                disableTypography\n                title={\n                    <Grid container alignItems=\"center\" className={classes.bigGridGap}>\n                        <Grid item>\n                            <Typography variant=\"h6\">{project.title}</Typography>\n                        </Grid>\n                        <Grid item>\n                            {project.active ? (\n                                <Typography variant=\"button\" color=\"primary\">\n                                    active\n                                </Typography>\n                            ) : (\n                                <Typography variant=\"button\" color=\"error\">\n                                    inactive\n                                </Typography>\n                            )}\n                        </Grid>\n                    </Grid>\n                }\n                avatar={\n                    <Hidden xsDown>\n                        <ProjectOwnerImage project={project}></ProjectOwnerImage>\n                    </Hidden>\n                }\n                action={\n                    <Grid container alignItems=\"center\">\n                        {ownerProject.isOwner && (\n                            <>\n                                <EditFormModal {...project} />\n                                <DeleteConfirmationModal {...project} />\n                            </>\n                        )}\n                        <IconButton href={formatURL(project.githubLink)} rel=\"noreferrer\" target=\"_blank\">\n                            <SiGithub />\n                        </IconButton>\n                        <IconButton\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                            href={'https://recurse.zulipchat.com/#narrow/pm-with/' + project.owner.zulip_id}\n                        >\n                            <SiZulip />\n                        </IconButton>\n                    </Grid>\n                }\n                subheader={\n                    <>\n                        <Link className={classes.cursorPointer} onClick={() => setOwnerFilter(project.owner.rcId)}>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {`${project.owner.first_name} ${project.owner.last_name} (${project.owner.batch})`}\n                            </Typography>\n                        </Link>\n                    </>\n                }\n            ></CardHeader>\n            <CardContent>\n                <Container className={classes.staticProjectDetails}>\n                    <Divider className={classes.staticProjectDivider} />\n                    <Typography variant=\"body1\" component=\"p\" paragraph>\n                        {project.description}\n                    </Typography>\n                    <Grid container>\n                        <Grid xs={12} lg={4} item>\n                            {collaborators}\n                        </Grid>\n                        <Grid xs={12} lg={8} item>\n                            {tags}\n                        </Grid>\n                    </Grid>\n                </Container>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default StaticProject;\n","export const formatURL = (url: string): string => {\n    const pattern = /^((http|https|ftp):\\/\\/)/;\n    return !pattern.test(url) ? `http://${url}` : url;\n};\n","import React from 'react';\nimport { IProject } from '../../types/types';\nimport NoProjects from '../HelperComponents/NoProjects';\n\nimport StaticProject from './StaticProject';\n\ninterface ProjectsListProps {\n    projects: IProject[];\n}\n\nconst ProjectList = ({ projects }: ProjectsListProps): JSX.Element => {\n    if (projects.length < 1) {\n        return <NoProjects />;\n    } else {\n        return (\n            <main className=\"project-list\">\n                {projects.map((project: IProject) => {\n                    return <StaticProject key={project._id.toString()} {...project} />;\n                })}\n            </main>\n        );\n    }\n};\n\nexport default ProjectList;\n","import { useQuery, UseQueryResult } from 'react-query';\nimport { axiosInstance } from '../utils/axiosInstance';\nimport { IProjectOwnerCheck } from '../types/types';\nimport { QueryParams } from '../types/filterTypes';\nimport queryKeys from '../utils/queryKeys';\nimport { AxiosError } from 'axios';\n\nconst getProjects = async (params: QueryParams): Promise<IProjectOwnerCheck[]> => {\n    const defaultData: IProjectOwnerCheck[] = [];\n    const { data = defaultData } = await axiosInstance.get('/projects/', { params });\n    return data;\n};\nconst useProjects = (params: QueryParams): UseQueryResult<IProjectOwnerCheck[], AxiosError> => {\n    return useQuery([queryKeys.projects, params], () => getProjects(params), { keepPreviousData: true });\n};\n\nexport default useProjects;\n","export default __webpack_public_path__ + \"static/media/rc-logo.d6168d48.png\";","import React from 'react';\nimport { useStyles } from '../../static/styles';\nimport { AppBar, Typography, Button, Avatar, Hidden } from '@material-ui/core';\nimport logo from '../../static/images/rc-logo.png';\nimport Container from '@material-ui/core/Container';\nimport { authURL } from '../../utils/axiosInstance';\n\nconst Auth = (): JSX.Element => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <AppBar className={classes.appBar} position=\"fixed\">\n                <div className={classes.appBarLeft}>\n                    <Avatar variant=\"square\" alt=\"logo\" src={logo}></Avatar>\n                    <Hidden xsDown>\n                        <Typography component=\"h1\" variant=\"h6\">\n                            RC-Prjkt\n                        </Typography>\n                    </Hidden>\n                </div>\n                <div className={classes.appBarRight}>\n                    <Button className={classes.navButton} variant=\"contained\" color=\"secondary\" href={authURL}>\n                        Authorize\n                    </Button>\n                </div>\n            </AppBar>\n            <Container className={classes.auth} maxWidth=\"sm\">\n                <img alt=\"logo\" src={logo}></img>\n                <Typography component=\"h2\" variant=\"h5\">\n                    Welcome to RC Projects!\n                </Typography>\n                <Typography variant=\"body2\">Please authorize using your Recurse Center data to continue</Typography>\n                <Button href={authURL} fullWidth variant=\"contained\" color=\"secondary\">\n                    Authorize\n                </Button>\n            </Container>\n        </>\n    );\n};\n\nexport default Auth;\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\n\nimport { axiosInstance } from '../../../utils/axiosInstance';\nimport queryKeys from '../../../utils/queryKeys';\nimport ProjectForm from './form-subs/ProjectForm';\nimport { IUserFromClient } from './form-subs/generic/CustomMultiSelect';\nimport { ITagFromClient } from './form-subs/generic/CustomCreatableMultiSelect';\nimport { Container } from '@material-ui/core';\nimport { useStyles } from '../../../static/styles';\n\nexport interface ProjectFormSubmitValues {\n    title: string;\n    description: string;\n    githubLink: string;\n    collaborators: IUserFromClient[];\n    tags: ITagFromClient[];\n    active: boolean;\n}\n\ninterface AddProps {\n    setOpen: Dispatch<SetStateAction<boolean>>;\n}\n\nconst ProjectFormAdd = ({ setOpen }: AddProps): JSX.Element => {\n    const queryClient = useQueryClient();\n    const classes = useStyles();\n\n    const addMutation = useMutation(\n        (body: ProjectFormSubmitValues) => axiosInstance.post(`/projects/`, body, { withCredentials: true }),\n        {\n            onSuccess: () => {\n                queryClient.invalidateQueries(queryKeys.projects);\n                queryClient.invalidateQueries(queryKeys.tags);\n            },\n        },\n    );\n\n    const submitProjectToAdd = async (values: ProjectFormSubmitValues) => {\n        addMutation.mutate({\n            title: values.title,\n            description: values.description,\n            githubLink: values.githubLink,\n            collaborators: values.collaborators,\n            tags: values.tags,\n            active: values.active,\n        });\n        setOpen((prevState: boolean) => !prevState);\n    };\n\n    const onCancel = () => {\n        setOpen((prevState: boolean) => !prevState);\n    };\n\n    const initialValues: ProjectFormSubmitValues = {\n        title: '',\n        description: '',\n        githubLink: '',\n        collaborators: [],\n        tags: [],\n        active: true,\n    };\n\n    return (\n        <div>\n            <Container disableGutters className={classes.projectFormContainer}>\n                <ProjectForm onSubmit={submitProjectToAdd} initialValues={initialValues} onCancel={onCancel} />\n            </Container>\n        </div>\n    );\n};\n\nexport default ProjectFormAdd;\n","import React, { useState } from 'react';\n\nimport { Dialog, DialogContent, DialogTitle, Button, useMediaQuery } from '@material-ui/core';\nimport ProjectFormAdd from './ProjectFormAdd';\nimport { FaPlus } from 'react-icons/fa';\n\nconst AddFormModal = (): JSX.Element => {\n    const [open, setOpen] = useState(false);\n    const isSmallScreen = useMediaQuery('(max-width: 650px)');\n\n    return (\n        <div>\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => setOpen(true)}>\n                {isSmallScreen ? <FaPlus /> : 'Add Project'}\n            </Button>\n            <Dialog open={open} onClose={() => setOpen(false)} maxWidth=\"md\" fullWidth={true}>\n                <DialogTitle>{'Add Project'}</DialogTitle>\n                <DialogContent>\n                    <ProjectFormAdd setOpen={setOpen} />\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AddFormModal;\n","import React from 'react';\nimport { Tab, Tabs, AppBar, Typography, Hidden, Avatar } from '@material-ui/core';\nimport { useStyles } from '../../static/styles';\nimport logo from '../../static/images/rc-logo.png';\nimport { useStore, AppState } from '../../utils/store';\nimport { SortMethods, QueryParams } from '../../types/filterTypes';\nimport { FaHome, FaUser } from 'react-icons/fa';\nimport { useMediaQuery } from '@material-ui/core';\nimport AddFormModal from '../Project/form/AddFormModal';\n\ninterface NavProps {\n    allProjects: boolean;\n    setParams: React.Dispatch<React.SetStateAction<QueryParams>>;\n    setAllProjects: React.Dispatch<React.SetStateAction<boolean>>;\n}\nconst Nav = ({ allProjects, setAllProjects, setParams }: NavProps): JSX.Element => {\n    const setOwnerFilter = useStore((state: AppState) => state.setOwnerFilter);\n    const setTagFilter = useStore((state: AppState) => state.setTagFilter);\n\n    const isSmallScreen = useMediaQuery('(max-width: 650px)');\n    const classes = useStyles();\n\n    return (\n        <AppBar className={classes.appBar} position=\"fixed\">\n            <div className={classes.appBarLeft}>\n                <Avatar variant=\"square\" alt=\"logo\" src={logo}></Avatar>\n                <Hidden xsDown>\n                    <Typography component=\"h1\" variant=\"h6\">\n                        RC-Prjkt\n                    </Typography>\n                </Hidden>\n            </div>\n            <div className={classes.appBarRight}>\n                <AddFormModal />\n                <Tabs value={allProjects ? 0 : 1} classes={{ indicator: classes.tallIndicator }}>\n                    <Tab\n                        label={!isSmallScreen && 'All Projects'}\n                        icon={isSmallScreen ? <FaHome /> : ''}\n                        onClick={() => {\n                            setAllProjects(true);\n                            setParams({ status: true, sort: SortMethods['Last Updated'] });\n                            setOwnerFilter(undefined);\n                            setTagFilter(undefined);\n                        }}\n                    />\n                    <Tab\n                        label={!isSmallScreen && 'My Projects'}\n                        icon={isSmallScreen ? <FaUser /> : ''}\n                        onClick={() => {\n                            setAllProjects(false);\n                            setParams({ me: true, sort: SortMethods['Last Updated'] });\n                        }}\n                    />\n                </Tabs>\n            </div>\n        </AppBar>\n    );\n};\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport Filter from '../Filter/Filter';\nimport { queryClient } from '../../utils/queryClient';\nimport { useQuery } from 'react-query';\nimport ProjectList from '../Project/ProjectList';\nimport useProjects from '../../hooks/useProjects';\nimport Loading from '../HelperComponents/Loading';\nimport Auth from './Auth';\nimport Nav from './Nav';\nimport { SortMethods, QueryParams } from '../../types/filterTypes';\nimport { useStyles } from '../../static/styles';\nimport { Collapse, Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport queryKeys from '../../utils/queryKeys';\nimport { Button } from '@material-ui/core';\n\nconst Home = (): JSX.Element => {\n    const classes = useStyles();\n    const [params, setParams] = useState<QueryParams>({ sort: SortMethods['Last Updated'] });\n    const [allProjects, setAllProjects] = useState<boolean>(true);\n\n    const { data: projects, isLoading, isSuccess } = useProjects(params);\n\n    const { data: auth } = useQuery(\n        queryKeys.isAuth,\n        () => Promise.resolve(queryClient.getQueryData(queryKeys.isAuth)),\n        { initialData: true },\n    );\n    const { data: snackbarError } = useQuery(\n        queryKeys.snackbarError,\n        () => Promise.resolve(queryClient.getQueryData(queryKeys.snackbarError)),\n        { initialData: false },\n    );\n\n    if (isLoading) return <></>;\n\n    if (!auth) return <Auth />;\n\n    return (\n        <div className={classes.root}>\n            <Nav setParams={setParams} allProjects={allProjects} setAllProjects={setAllProjects} />\n            <Collapse in={allProjects}>\n                <Filter setParams={setParams} />\n            </Collapse>\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={snackbarError}>\n                <Alert severity=\"error\" onClose={() => queryClient.setQueryData(queryKeys.snackbarError, false)}>\n                    An unexpected error has occurred\n                </Alert>\n            </Snackbar>\n            {isSuccess && projects ? <ProjectList projects={projects} /> : <Loading />}\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { FaGithub, FaHeart } from 'react-icons/fa';\nimport { useStyles } from '../../static/styles';\nimport { Grid } from '@material-ui/core';\n\nexport default function Footer(): JSX.Element {\n    const classes = useStyles();\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" className={classes.footer}>\n            <Typography variant=\"body1\">\n                <Link\n                    title=\"Recurse Center Logo\"\n                    color=\"textSecondary\"\n                    href=\"https://recurse.com\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    Made with <FaHeart /> at the Recurse Center\n                </Link>\n            </Typography>\n            <Typography variant=\"body1\">\n                <Link\n                    color=\"textSecondary\"\n                    title=\"GitHub Repo Link\"\n                    href=\"https://github.com/ArtSze/rc-prjkt\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <FaGithub /> View source code\n                </Link>\n            </Typography>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { AppBar, Avatar, Button, Container, Hidden, Typography } from '@material-ui/core';\nimport { useStyles } from '../../static/styles';\nimport logo from '../../static/images/rc-logo.png';\n\nconst NotFound = (): JSX.Element => {\n    const classes = useStyles();\n    return (\n        <Container>\n            <AppBar className={classes.appBar} position=\"fixed\">\n                <div className={classes.appBarLeft}>\n                    <Avatar variant=\"square\" alt=\"logo\" src={logo}></Avatar>\n                    <Hidden xsDown>\n                        <Typography component=\"h1\" variant=\"h6\">\n                            RC-Prjkt\n                        </Typography>\n                    </Hidden>\n                </div>\n                <div className={classes.appBarRight}>\n                    <Button className={classes.navButton} variant=\"contained\" color=\"secondary\" href=\"/\">\n                        Home\n                    </Button>\n                </div>\n            </AppBar>\n            <Container maxWidth=\"md\" className={classes.notFound}>\n                <Typography variant=\"h2\" component=\"h1\">\n                    404: Not Found\n                </Typography>\n                <Button href=\"/\" variant=\"contained\" color=\"secondary\" className={classes.notFoundButton}>\n                    Home\n                </Button>\n            </Container>\n        </Container>\n    );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Container, ThemeProvider } from '@material-ui/core';\nimport { theme } from '../../static/theme';\nimport Home from './Home';\nimport Footer from './Footer';\nimport NotFound from '../HelperComponents/NotFound';\n\nconst App = (): JSX.Element => {\n    return (\n        <ThemeProvider theme={theme}>\n            <Container disableGutters maxWidth=\"md\">\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home />\n                        </Route>\n                        <Route component={NotFound} />\n                    </Switch>\n                </Router>\n            </Container>\n            <Footer />\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { queryClient } from './utils/queryClient';\n\nReactDOM.render(\n    <React.StrictMode>\n        <QueryClientProvider client={queryClient}>\n            <App />\n\n            <ReactQueryDevtools initialIsOpen />\n        </QueryClientProvider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}